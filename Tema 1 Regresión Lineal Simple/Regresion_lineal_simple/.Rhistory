knitr::opts_chunk$set(echo = TRUE)
load('./data/datosTema1.Rdata')
#ajuste knn vecinos
library(FNN)  #libreria
knitr::opts_chunk$set(echo = TRUE)
load('./data/datosTema1.Rdata')
#ajuste knn vecinos
require(FNN)  #libreria
knitr::opts_chunk$set(echo = TRUE)
load('./data/datosTema1.Rdata')
knitr::opts_chunk$set(echo = TRUE)
load('./data/datosTema1.Rdata')
#ajuste knn vecinos
require(FNN)  #libreria
xx <- seq(min(lstat),max(lstat),0.25) # puntos (ordenados)
load('./data/datosTema1.Rdata')
View(deportistas)
fit1<-lm(Peso~PrctGrasa, data=deportistas)
fit1
summary(fit1)
View(fit1)
fit1_s<-summary(fit1)
fit1_s
View(fit1_s)
confint(fit1s)
confint(fit1)
fit1_s$r.squared
# Porcentaje de la variabilidad inicial explicada por la recta de mínimos cuadrados
fit1_s$r.squared*100
# Porcentaje de la variabilidad NO explicada por el modelo
100-fit1_s$r.squared*100
plot(fit1)
plot(x=deportistas$PrctGrasa, y=deportistas$Peso)
fit1["coefficients"][2]
minx<-range(deportistas$PrctGrasa)[1] maxx<-range(deportistas$PrctGrasa)[2]
minx<-range(deportistas$PrctGrasa)[1]
maxx<-range(deportistas$PrctGrasa)[2]
nuevos <- data.frame(list(PrctGrasa = seq(minx,maxx,length=100)))
bandas_est<-predict(fit1, newdata = nuevos, interval = "confidence")
plot(deportistas$PrctGrasa, deportistas$Peso, col='BLUE')
abline(coef=coef(fit1), col='RED')
lines(nuevos$PrctGrasa,bandas_est[,2],col='BLACK')
lines(nuevos$PrctGrasa,bandas_est[,3],col='BLACK')
minx<-range(deportistas$PrctGrasa)[1]
maxx<-range(deportistas$PrctGrasa)[2]
nuevos <- data.frame(list(PrctGrasa = seq(minx,maxx,length=100)))
bandas_est<-predict(fit1, newdata = nuevos, interval = "confidence")
plot(deportistas$PrctGrasa, deportistas$Peso, col='BLUE')
abline(coef=coef(fit1), col='RED', xlab="PrctGrasa", ylab="Peso", main="Deportistas")
lines(nuevos$PrctGrasa,bandas_est[,2],col='BLACK')
lines(nuevos$PrctGrasa,bandas_est[,3],col='BLACK')
minx<-range(deportistas$PrctGrasa)[1]
maxx<-range(deportistas$PrctGrasa)[2]
nuevos <- data.frame(list(PrctGrasa = seq(minx,maxx,length=100)))
bandas_est<-predict(fit1, newdata = nuevos, interval = "confidence")
plot(deportistas$PrctGrasa, deportistas$Peso, col='BLUE', xlab="PrctGrasa", ylab="Peso", main="Deportistas")
abline(coef=coef(fit1), col='RED')
lines(nuevos$PrctGrasa,bandas_est[,2],col='BLACK')
lines(nuevos$PrctGrasa,bandas_est[,3],col='BLACK')
View(fit1)
# Comparación de las varianzas
var(fit1$fitted.values)
var(fit1$residuals)
# Comparación de las varianzas
var(deportistas$Peso)
var(fit1$residuals)
# Porcentaje de la variabilidad inicial explicada por la recta de mínimos cuadrados
fit1_s$r.squared*100
# Porcentaje de la variabilidad NO explicada por el modelo
100-fit1_s$r.squared*100
predict25<-predict(fit1, 25)
range(deportistas$PrctGrasa)
predict25<-predict(fit1, 25, interval = "prediction")
predict25<-predict(fit1, newdata=data.frame(c(25)), interval = "prediction")
predict25<-predict(fit1, newdata=data.frame(PrctGrasa=c(25)), interval = "prediction")
predict50<-predict(fit1, newdata=data.frame(PrctGrasa=c(25)),interval = "prediction")
predict75<-predict(fit1, newdata=data.frame(PrctGrasa=c(25)),interval = "prediction")
predict25
predict50
predict70
predict25<-predict(fit1, newdata=data.frame(PrctGrasa=c(25)), interval = "prediction")
predict50<-predict(fit1, newdata=data.frame(PrctGrasa=c(50)),interval = "prediction")
predict75<-predict(fit1, newdata=data.frame(PrctGrasa=c(75)),interval = "prediction")
predict25
predict50
predict75
fit1<-lm(Peso~PrctGrasa, data=deportistas)
fit1_s<-summary(fit1)
deportistas
fit2<-lm(IMC~PrctGrasa, data=deportistas)
fit2_s<-summary(fit1)
fit2_s
fit2<-lm(IMC~PrctGrasa, data=deportistas)
fit2_s<-summary(fit2)
fit2_s
minx<-range(deportistas$PrctGrasa)[1]
maxx<-range(deportistas$PrctGrasa)[2]
nuevos <- data.frame(list(PrctGrasa = seq(minx,maxx,length=100)))
bandas_est<-predict(fit2, newdata = nuevos, interval = "confidence")
plot(deportistas$PrctGrasa, deportistas$IMC, col='BLUE', xlab="PrctGrasa", ylab="IMC", main="Deportistas")
abline(coef=coef(fit2), col='RED')
lines(nuevos$PrctGrasa,bandas_est[,2],col='BLACK')
lines(nuevos$PrctGrasa,bandas_est[,3],col='BLACK')
# Comparación de las varianzas
var(deportistas$IMC)
var(fit2$residuals)
# Porcentaje de la variabilidad inicial explicada por la recta de mínimos cuadrados
fit2_s$r.squared*100
# Porcentaje de la variabilidad NO explicada por el modelo
100-fit2_s$r.squared*100
?predict
?bootstrap
knitr::opts_chunk$set(echo = TRUE)
confint(fit2)
knitr::opts_chunk$set(echo = TRUE)
load('./data/datosTema1.Rdata')
fit1<-lm(Peso~PrctGrasa, data=deportistas)
fit1_s<-summary(fit1)
fit1_s
confint(fit1)
# Comparación de las varianzas
var(deportistas$Peso)
var(fit1$residuals)
# Porcentaje de la variabilidad inicial explicada por la recta de mínimos cuadrados
fit1_s$r.squared*100
# Porcentaje de la variabilidad NO explicada por el modelo
100-fit1_s$r.squared*100
confint(fit1)
minx<-range(deportistas$PrctGrasa)[1]
maxx<-range(deportistas$PrctGrasa)[2]
nuevos <- data.frame(list(PrctGrasa = seq(minx,maxx,length=100)))
bandas_est<-predict(fit1, newdata = nuevos, interval = "confidence")
plot(deportistas$PrctGrasa, deportistas$Peso, col='BLUE', xlab="PrctGrasa", ylab="Peso",
main="Deportistas")
abline(coef=coef(fit1), col='RED')
lines(nuevos$PrctGrasa,bandas_est[,2],col='BLACK')
lines(nuevos$PrctGrasa,bandas_est[,3],col='BLACK')
predict25<-predict(fit1, newdata=data.frame(PrctGrasa=c(25)), interval = "prediction")
predict50<-predict(fit1, newdata=data.frame(PrctGrasa=c(50)),interval = "prediction")
predict75<-predict(fit1, newdata=data.frame(PrctGrasa=c(75)),interval = "prediction")
predict25
predict50
predict75
fit2<-lm(IMC~PrctGrasa, data=deportistas)
fit2_s<-summary(fit2)
fit2_s
# Comparación de las varianzas
var(deportistas$IMC)
var(fit2$residuals)
# Porcentaje de la variabilidad inicial explicada por la recta de mínimos cuadrados
fit2_s$r.squared*100
# Porcentaje de la variabilidad NO explicada por el modelo
100-fit2_s$r.squared*100
confint(fit2)
confint(fit2)["PrctGrasa"]
confint(fit2)["PrctGrasa",]
error<-rnorm(n, mean=0, sd=2)
x<-runif(n, min=min_x, max=max_x)
y<-25+2*x+error
fit<-lm(y~x, data=y)
set.seed(1)
N<-10000
n<-50
min_x<-0
max_x<-5
error<-rnorm(n, mean=0, sd=2)
x<-runif(n, min=min_x, max=max_x)
y<-25+2*x+error
fit<-lm(y~x, data=y)
fit<-lm(y~x, data=data.frame(x=x, y=y))
confint(fit)
intervalo<-confint(fit)["x",]
intervalo[1]
acierto<-0
ifelse(2>intervalo[1] & 2<intervalo[2], acierto=acierto+1, acierto)
ifelse(2>intervalo[1] & 2<intervalo[2], acierto+1, acierto)
set.seed(1)
N<-10000
n<-50
min_x<-0
max_x<-5
acierto<-0
for (i in 1:N){
error<-rnorm(n, mean=0, sd=2)
x<-runif(n, min=min_x, max=max_x)
y<-25+2*x+error
fit<-lm(y~x, data=data.frame(x=x, y=y))
intervalo<-confint(fit)["x",]
if(2>intervalo[1] & 2<intervalo[2]){
acierto=acierto+1
}
}
por<-acierto/N*100
fitCerebro<-lm(cerebro~cuerpo, data=cerebros)
fitCerebro_s<-summary(fiterebro_s)
fitCerebro_s<-summary(fiterebro)
fitCerebro_s<-summary(fitCerebro)
fitCerebro
fitCerebro_s
plot(fitCerebro_s$residuals)
plot(fitCerebro_s)
plot(fitCerebro)
fitCerebro_s
plot(cerebros$cuerpo, cerebros$cerebro)
cerebros
caja<-boxplot(cerebros$cuerpo, cerebros$cerebro, col="skyblue", frame.plot=F)
caja<-boxplot(cerebros$cerebro, col="skyblue", frame.plot=F)
caja$out
caja<-boxplot(cerebros$cerebro, col="skyblue", frame.plot=F)
df<-cerebros[!(cerebros$cerebro %in% caja$out),]
caja<-boxplot(cerebros$cerebro, col="skyblue", frame.plot=F)
df<-cerebros[!(cerebros$cerebro %in% caja$out),]
fitCerebro2<-lm(cerebro~cuerpo, data=df)
fitCerebro2_s<-summary(fitCerebro2)
fitCerebro2_s
plot(fitCerebro2)
?regsubset
?regsubsets
library(leaps)
install.packages("leaps")
library(leaps)
?regsubsets
x<-seq(from = 0, to = 10, by =0.1)
a=log(23)
b=sin(π/3)
b=sin(pi/3)
y=ax+b
y=a*x+b
plot(x,y)
cor(x,y)
cor(x,y,method="spearman")
