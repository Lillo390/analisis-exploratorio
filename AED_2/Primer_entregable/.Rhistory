BreadBasket_DMS <- read.csv("C:/Users/1/Master_CD/Analisis_exploratorio_de_datos/AED_2/Primer_entregable/data/BreadBasket_DMS.csv")
View(BreadBasket_DMS)
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo=T,message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = './figure/')
#options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
#knit_hooks$set(plot = knitr:::hook_plot_html)
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
View(params)
View(BreadBasket)
class(BreadBasket)
save(BreadBasket)
save(file=BreadBasket)
save(BreadBasket, file="BreadBasket")
save(BreadBasket, file="./data/BreadBasket")
Deposito <- read.delim("C:/Users/1/Master_CD/Analisis_exploratorio_de_datos/AED_2/Primer_entregable/data/DFP1_11122015 124700.csv")
View(Deposito)
save(Deposito, file="./data/Deposito.RData")
save(BreadBasket, file="./data/BreadBasket.RData")
# Especificamos las librerías necesarias en esta lista
packages = c("tidyverse","knitr", "readxl")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
save(BreadBasket, file="./data/BreadBasket.RData")
Deposito <- read.delim("./data/DFP1_11122015 124700.csv")
save(Deposito, file="./data/Deposito.RData")
ERCA<- readxl::read_excel("./data/ERCA NUEVA2  20161103.xls",
sheet = "Hoja1 - Tabla 1", col_types = c("numeric",
"numeric", "date", "text", "date",
"date", "numeric", "numeric", "text",
"date", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "skip",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
View(ERCA)
library(readxl)
Pacientes <- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
View(Pacientes)
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo=T,message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = './figure/')
#options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
#knit_hooks$set(plot = knitr:::hook_plot_html)
Pacientes<-list()
Pacientes[1]<- read_excel(".data/subjectInfo.xlsx",
+     sheet = "measurments")
Pacientes1<- read_excel(".data/subjectInfo.xlsx",
+     sheet = "measurments")
Pacientes[1]<- read_excel("data/subjectInfo.xlsx",
+     sheet = "measurments")
library(readxl)
Pacientes[1]<- read_excel("data/subjectInfo.xlsx",
+     sheet = "measurments")
Borrar <- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes1<- read_excel("data/subjectInfo.xlsx",
+     sheet = "measurments")
Borrar <- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes[1]<- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes[2]<- read_excel(".data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes[2]<- read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes[3]<- read_excel("data/subjectInfo.xlsx",
sheet = "tuning fork NSS")
Pacientes[4]<- read_excel("data/subjectInfo.xlsx",
sheet = "mobility")
Pacientes[5]<- read_excel("data/subjectInfo.xlsx",
+     sheet = "Durometer")
Pacientes[5]<- read_excel("data/subjectInfo.xlsx",
sheet = "Durometer")
View(Pacientes)
Pacientes[1]
Pacientes[[1]]
View(Pacientes)
Pacientes1<-read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
View(Pacientes1)
Pacientes[1][1]
Pacientes[1][1][2]
Pacientes[1][1,2]
Pacientes[[1]][1,2]
Pacientes2<-read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
prueba<-list(Pacientes1, Pacientes2)
View(prueba)
Pacientes<-list(Pacientes1, Pacientes2, Pacientes3, Pacientes4, Pacientes5)
Pacientes1<- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes2<- read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes3<- read_excel("data/subjectInfo.xlsx",
sheet = "tuning fork NSS")
Pacientes4<- read_excel("data/subjectInfo.xlsx",
sheet = "mobility")
Pacientes5<- read_excel("data/subjectInfo.xlsx",
sheet = "Durometer")
Pacientes<-list(Pacientes1, Pacientes2, Pacientes3, Pacientes4, Pacientes5)
save(Pacientes, file="./data/Pacientes.RData")
# Especificamos las librerías necesarias en esta lista
packages = c("tidyverse","knitr", "readxl", "haven")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
#verify they are loaded
search()
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
save(BreadBasket, file="./data/BreadBasket.RData")
Deposito <- read.delim("./data/DFP1_11122015 124700.csv")
save(Deposito, file="./data/Deposito.RData")
ERCA<- readxl::read_excel("./data/ERCA NUEVA2  20161103.xls",
sheet = "Hoja1 - Tabla 1", col_types = c("numeric",
"numeric", "date", "text", "date",
"date", "numeric", "numeric", "text",
"date", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "skip",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
save(ERCA, file="./data/ERCA.RData")
Pacientes1<- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes2<- read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes3<- read_excel("data/subjectInfo.xlsx",
sheet = "tuning fork NSS")
Pacientes4<- read_excel("data/subjectInfo.xlsx",
sheet = "mobility")
Pacientes5<- read_excel("data/subjectInfo.xlsx",
sheet = "Durometer")
Pacientes<-list(Pacientes1, Pacientes2, Pacientes3, Pacientes4, Pacientes5)
save(Pacientes, file="./data/Pacientes.RData")
microRNA_Neumo <- read_sav("data/microRNAsNeumonia.sav")
save(microRNA_Neumo, file="./data/microRNA_Neumo.RData")
# Especificamos las librerías necesarias en esta lista
packages = c("tidyverse","knitr", "readxl", "haven","BiocManager")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
BiocManager::install("rhdf5")
#verify they are loaded
search()
require("rhdf5")
library("rhdf5", character.only = TRUE)
?h5read
h5read(Tensiones1.hdf5)
h5read("data/Tensiones1.hdf5")
H5Fopen("data/Tensiones1.hdf5")
borrar<-H5Fopen("data/Tensiones1.hdf5")
View(borrar)
borrar
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo=T,message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = './figure/')
#options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
#knit_hooks$set(plot = knitr:::hook_plot_html)
borrar[2]
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo=T,message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = './figure/')
#options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
#knit_hooks$set(plot = knitr:::hook_plot_html)
# Especificamos las librerías necesarias en esta lista
packages = c("tidyverse","knitr", "readxl", "haven","BiocManager")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
if (!require("rhdf5", character.only = TRUE)) {
BiocManager::install("rhdf5")
library("rhdf5", character.only = TRUE)
}
#verify they are loaded
search()
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
save(BreadBasket, file="./data/BreadBasket.RData")
Deposito <- read.delim("./data/DFP1_11122015 124700.csv")
save(Deposito, file="./data/Deposito.RData")
ERCA<- readxl::read_excel("./data/ERCA NUEVA2  20161103.xls",
sheet = "Hoja1 - Tabla 1", col_types = c("numeric",
"numeric", "date", "text", "date",
"date", "numeric", "numeric", "text",
"date", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "skip",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
save(ERCA, file="./data/ERCA.RData")
Pacientes1<- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes2<- read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes3<- read_excel("data/subjectInfo.xlsx",
sheet = "tuning fork NSS")
Pacientes4<- read_excel("data/subjectInfo.xlsx",
sheet = "mobility")
Pacientes5<- read_excel("data/subjectInfo.xlsx",
sheet = "Durometer")
Pacientes<-list(Pacientes1, Pacientes2, Pacientes3, Pacientes4, Pacientes5)
save(Pacientes, file="./data/Pacientes.RData")
microRNA_Neumo <- read_sav("data/microRNAsNeumonia.sav")
save(microRNA_Neumo, file="./data/microRNA_Neumo.RData")
borrar<-H5Fopen("data/Tensiones1.hdf5")
borrar[2]
borrar
H5Fget_access_plist("./data/microRNA_Neumo.RData")
h5ls("./data/Tensiones1.hdf5")
H5Fopen("./data/Tensiones1.hdf5")
borrar<-H5Fopen("./data/Tensiones1.hdf5")
borrar
h5ls(borrar)
h5dump(borrar)
h5ls(borrar)
a<-h5ls(borrar)
a
a<-h5ls("./data/Tensiones1.hdf5")
a
Tensiones<-h5ls("./data/Tensiones1.hdf5")
h5dump(Tensiones)
Tensiones
Tensiones<-h5ls("./data/Tensiones1.hdf5")
Tensiones
Tensiones["VarNameSelect"]
Tensiones
Tensiones
Tensiones$name
Tensiones$name["VarNameSelec"]
Tensiones$name[1]
Tensiones$name[[1]]
Tensiones
prueba<-H5Fopen("./data/Tensiones1.hdf5")
prueba
prueba
Tensiones
prueba<-h5readAttributes("./data/Tensiones1.hdf5", name=VarNameSelec)
prueba<-h5readAttributes("./data/Tensiones1.hdf5", name="VarNameSelec")
prueba
Tensiones
prueba<-h5readAttributes("./data/Tensiones1.hdf5", name="VarNameSelec")
View(Tensiones)
prueba<-h5readAttributes("./data/Tensiones1.hdf5", name="/VarNameSelec")
h5dump(Tensiones)
h5dump("./data/Tensiones1.hdf5")
Tensiones$VarNameSelec
Tensiones$name
Tensiones["VarNameSelec"]
Tensiones["VarNameSelec",]
Tensiones/"VarNameSelec"
H5Fopen("Tensiones/VarNameSelec")
Tensiones<-H5Fopen("./data/Tensiones1.hdf5")
H5Dopen("Tensiones/VarNameSelec")
H5Dopen(Tensiones, VarNameSelec)
H5Dopen(Tensiones, "VarNameSelec")
H5Dopen(Tensiones, "VarNameSelec")
prueba<-H5Dopen(Tensiones, "VarNameSelec")
prueba
View(prueba)
H5Dclose(prueba)
prueba
h5readAttributes(file="./data/Tensiones1.hdf5", name="VarNameSelec")
as.data.frame(h5dump("./data/Tensiones1.hdf5"))
h5readAttributes(file="./data/Tensiones1.hdf5", name="VarNameSelec/n")
h5readAttributes(file="./data/Tensiones1.hdf5", name="n")
b<-h5dump("./data/Tensiones1.hdf5")
View(b)
?data.frame
View(b)
b["input"]
Tensiones<-data.frame(b["input"])
View(Tensiones)
colnames(Tensiones)<-b$VarNameSelec
# CONFIGURACIÓN GENERAL
library(knitr)
options(width = 100)
# Opciones generales chunks
opts_chunk$set(echo=T,message = F, error = F, warning = F, comment = NA, fig.align = 'center', dpi = 100, tidy = F, cache.path = '.cache/', fig.path = './figure/')
#options(xtable.type = 'html')
knit_hooks$set(inline = function(x) {
if(is.numeric(x)) {
round(x, getOption('digits'))
} else {
paste(as.character(x), collapse = ', ')
}
})
#knit_hooks$set(plot = knitr:::hook_plot_html)
# Especificamos las librerías necesarias en esta lista
packages = c("tidyverse","knitr", "readxl", "haven","BiocManager")
#use this function to check if each package is on the local machine
#if a package is installed, it will be loaded
#if any are not, the missing package(s) will be installed and loaded
package.check <- lapply(packages, FUN = function(x) {
if (!require(x, character.only = TRUE)) {
install.packages(x, dependencies = TRUE)
library(x, character.only = TRUE)
}
})
if (!require("rhdf5", character.only = TRUE)) {
BiocManager::install("rhdf5")
library("rhdf5", character.only = TRUE)
}
#verify they are loaded
search()
BreadBasket<-read.csv("./data/BreadBasket_DMS.csv")
save(BreadBasket, file="./data/BreadBasket.RData")
Deposito <- read.delim("./data/DFP1_11122015 124700.csv")
save(Deposito, file="./data/Deposito.RData")
ERCA<- readxl::read_excel("./data/ERCA NUEVA2  20161103.xls",
sheet = "Hoja1 - Tabla 1", col_types = c("numeric",
"numeric", "date", "text", "date",
"date", "numeric", "numeric", "text",
"date", "text", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "numeric",
"numeric", "text", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric", "numeric", "skip",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "text", "numeric",
"numeric", "numeric", "numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
save(ERCA, file="./data/ERCA.RData")
Pacientes1<- read_excel("data/subjectInfo.xlsx",
sheet = "measurments")
Pacientes2<- read_excel("data/subjectInfo.xlsx",
sheet = "neuropathy")
Pacientes3<- read_excel("data/subjectInfo.xlsx",
sheet = "tuning fork NSS")
Pacientes4<- read_excel("data/subjectInfo.xlsx",
sheet = "mobility")
Pacientes5<- read_excel("data/subjectInfo.xlsx",
sheet = "Durometer")
Pacientes<-list(Pacientes1, Pacientes2, Pacientes3, Pacientes4, Pacientes5)
save(Pacientes, file="./data/Pacientes.RData")
microRNA_Neumo <- read_sav("data/microRNAsNeumonia.sav")
save(microRNA_Neumo, file="./data/microRNA_Neumo.RData")
b<-h5dump("./data/Tensiones1.hdf5")
Tensiones<-data.frame(b["input"])
colnames(Tensiones)<-b$VarNameSelec
save(Tensiones, file="./data/Tensiones.RData")
