"0","library(dplyr)"
"0","library(tidyr)"
"0","# Leemos el nombre del fichero que nos interesa y guardamos a qu√© sujeto"
"0","# corresponde."
"0","nombre<-grep(pattern="".asc$"", x=dir(), value=TRUE)"
"0","fichero<-readLines(nombre)"
"0","Sujeto<-unlist(strsplit(nombre, split=""_""))[2]"
"0",""
"0","# Obtenemos la variable SamplingFreq"
"0","SamplingFreq<-grep(pattern=""SamplingFreq=."",fichero, value=TRUE)"
"0","SamplingFreq<-unlist(strsplit(SamplingFreq, split=""=""))"
"0","SamplingFreq<-as.numeric(SamplingFreq[2])"
"0",""
"0","# Obtenemos la variable ChannelCount"
"0","ChannelCount<-grep(pattern=""ChannelCount=."",fichero, value=TRUE)"
"0","ChannelCount<-unlist(strsplit(ChannelCount, split=""=""))"
"0","ChannelCount<-as.numeric(ChannelCount[2])"
"0",""
"0","# Obtenemos la variable Units"
"0","Units<-grep(pattern=""[UNITS]"",fichero, fixed=TRUE)"
"0","Units<-fichero[Units+1]"
"0",""
"0","# Obtenemos las variables TipoPatada y OrdenComienzo"
"0","TipoPatada_index<-grep(pattern=""[COMMENT]"", fichero, fixed=TRUE)"
"0","OrdenComienzo<-unlist(strsplit(gsub(x=fichero[TipoPatada_index+1], replacement="""", "
"0","pattern=""[^d_i]| [^i_d]""), split=""""))"
"0","OrdenComienzo<-paste0(OrdenComienzo[(length(OrdenComienzo)-2)],"
"0","OrdenComienzo[(length(OrdenComienzo)-1)], OrdenComienzo[(length(OrdenComienzo))])"
"0","TipoPatada<-regexpr(""([0-9]+_[CGL])|([0-9]+[CGL])"",text=fichero[TipoPatada_index+1])"
"0","TipoPatada<-unlist(strsplit(fichero[TipoPatada_index+1], """"))[TipoPatada:attributes(TipoPatada)$match.length]"
"0","TipoPatada<-tail(TipoPatada, 1)"
"0",""
"0","# Contruimos una tabla con los datos igual que la del fichero"
"0","source_names<-grep(pattern=""[SOURCE NAMES]"", fichero, fixed=TRUE)"
"0","side_info<-grep(pattern=""[SIDE INFO]"", fichero, fixed=TRUE)"
"0","units<-grep(pattern=""[UNITS]"", fichero, fixed=TRUE)"
"0",""
"0","source_names<-fichero[(source_names+1):(source_names+ChannelCount)]"
"0","side_info<-fichero[(side_info+1):(side_info+ChannelCount)]"
"0",""
"0","columnas<-paste(side_info,source_names, sep=""_"")"
"0",""
"0","datos_index<-grep(pattern=""[DATA]"", fichero, fixed=TRUE)+1"
"0","N<-length(fichero)"
"0","datos<-matrix(0, nrow=(N-datos_index+1), ncol=length(columnas))"
"0","colnames(datos)<-columnas"
"0",""
"0","for(j in datos_index:N){"
"0","datos[j-datos_index+1,]<-as.numeric(gsub(x=unlist(strsplit(fichero[j], split=""\t"")),"
"0","pattern="","", replacement=""\\.""))"
"0","}"
"0",""
"0","datos<-as.data.frame(datos)"
"0",""
"0","# Transformamos la tabla en un conjunto Tidy"
"0","DataTK<-datos%>%"
"0","  pivot_longer(names_to=""NombreCanal"", values_to=""Data"", cols=everything())%>%"
"0","  separate(col=NombreCanal, into=c(""NombreCanal"",""Side""),sep=""_"")%>%"
"0","  transmute(""Sujeto""=Sujeto,""TipoPatada""=TipoPatada,""NombreCanal""=NombreCanal,"
"0","            ""Side""=Side, ""OrdenComienzo""=OrdenComienzo, ""Data""=Data)"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"2","*** recursive gc invocation
"
"0","# Guardamos los datos que nos interesan"
"0","save(DataTK, SamplingFreq, Units, ChannelCount, file=""Ejemplo.RData"")"
